script Common_PokemonScript_WildEncounter {
    lock
    faceplayer
    waitmovement(0)
    applymovement(VAR_LAST_TALKED, Common_Movement_ExclamationMark)
    waitmovement(0)
    waitse
    callnative(StartStationaryEncounter)
    playmoncry(VAR_0x8004, CRY_MODE_ENCOUNTER)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(format("You drew the attention of the wandering {STR_VAR_1}!"), MSGBOX_DEFAULT)
    msgbox("The wild Pokémon attacked!", MSGBOX_DEFAULT)
    waitmoncry
    waitmessage
    setflag(FLAG_SYS_CTRL_OBJ_DELETE)
    dowildbattle
    clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
    specialvar(VAR_RESULT, GetBattleOutcome)
    goto_if_eq(VAR_RESULT, B_OUTCOME_RAN, Common_EventScript_RanFromStaticPokemon)
    goto_if_eq(VAR_RESULT, B_OUTCOME_WON, Common_EventScript_DefeatedStaticPokemon)
    goto(Common_EventScript_RemoveStaticPokemon)
}

script Common_PokemonScript_WildNosepass {
    lock
    applymovement(VAR_LAST_TALKED, Common_Movement_ExclamationMark)
    waitmovement(0)
    waitse
    callnative(StartStationaryEncounter)
    switch(var(VAR_FACING)) {
    case DIR_SOUTH:
        playmoncry(VAR_0x8004, CRY_MODE_ENCOUNTER)
        bufferspeciesname(STR_VAR_1, VAR_0x8004)
        msgbox(format("You challenged the {STR_VAR_1} to a battle!"), MSGBOX_DEFAULT)
    default:
        playmoncry(VAR_0x8004, CRY_MODE_WEAK)
        bufferspeciesname(STR_VAR_1, VAR_0x8004)
        setvar(B_VAR_STARTING_STATUS, STARTING_STATUS_STARTLED_OPPONENT)
        msgbox(format("You ambushed the wild {STR_VAR_1}!"), MSGBOX_DEFAULT)
    }
    waitmoncry
    waitmessage
    setflag(FLAG_SYS_CTRL_OBJ_DELETE)
    dowildbattle
    clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
    setvar(B_VAR_STARTING_STATUS, 0)
    specialvar(VAR_RESULT, GetBattleOutcome)
    goto_if_eq(VAR_RESULT, B_OUTCOME_RAN, Common_EventScript_RanFromStaticPokemon)
    goto_if_eq(VAR_RESULT, B_OUTCOME_WON, Common_EventScript_DefeatedStaticPokemon)
    goto(Common_EventScript_RemoveStaticPokemon)
}

script Common_PokemonScript_WildSandygast {
    lock
    callnative(StartStationaryEncounter)
    msgbox(format("Beach toys are buried in the sand.\nPick them up?"), MSGBOX_YESNO)
    if (var(VAR_RESULT)) {
        setobjectmovementtype(VAR_LAST_TALKED, MOVEMENT_TYPE_LOOK_AROUND)
        applymovement(VAR_LAST_TALKED, Common_Movement_ExclamationMark)
        playmoncry(VAR_0x8004, CRY_MODE_ENCOUNTER)
        settotemboost(B_POSITION_OPPONENT_LEFT, 1, 0, 0, 1)
    } else {
        applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_QuestionMark)
        playmoncry(VAR_0x8004, CRY_MODE_WEAK)
        setvar(B_VAR_STARTING_STATUS, STARTING_STATUS_SLEEPING_OPPONENT)
    }
    waitmovement(0)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(format("The toys belong to a {STR_VAR_1}!"), MSGBOX_DEFAULT)
    waitmoncry
    waitmessage
    setflag(FLAG_SYS_CTRL_OBJ_DELETE)
    dowildbattle
    clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
    setvar(B_VAR_STARTING_STATUS, 0)
    specialvar(VAR_RESULT, GetBattleOutcome)
    goto_if_eq(VAR_RESULT, B_OUTCOME_RAN, Common_EventScript_RanFromStaticPokemon)
    goto_if_eq(VAR_RESULT, B_OUTCOME_WON, Common_EventScript_DefeatedStaticPokemon)
    goto(Common_EventScript_RemoveStaticPokemon)
}

script Common_PokemonScript_SleepingWild {
    lock
    callnative(StartStationaryEncounter)
    playmoncry(VAR_0x8004, CRY_MODE_WEAK)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    setvar(B_VAR_STARTING_STATUS, STARTING_STATUS_SLEEPING_OPPONENT)
    msgbox(format("You quietly approach the sleeping {STR_VAR_1}…"), MSGBOX_DEFAULT)
    waitmoncry
    waitmessage
    setflag(FLAG_SYS_CTRL_OBJ_DELETE)
    dowildbattle
    clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
    setvar(B_VAR_STARTING_STATUS, 0)
    specialvar(VAR_RESULT, GetBattleOutcome)
    goto_if_eq(VAR_RESULT, B_OUTCOME_RAN, Common_EventScript_RanFromStaticPokemon)
    goto_if_eq(VAR_RESULT, B_OUTCOME_WON, Common_EventScript_DefeatedStaticPokemon)
    goto(Common_EventScript_RemoveStaticPokemon)
}

script Common_EventScript_TrainingPokemon {
    lock
    faceplayer
    waitmovement(0)
    applymovement(VAR_LAST_TALKED, Common_Movement_ExclamationMark)
    waitmovement(0)
    callnative(GetSymbolEncounterSpecies)
    setseenmon(VAR_0x8004)
    playmoncry(VAR_0x8004, CRY_MODE_ENCOUNTER)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(format("A battle would interrupt the {STR_VAR_1}'s training."), MSGBOX_DEFAULT)
    waitmoncry
    applymovement(VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection)
    release
}

script Common_PokemonScript_WaitingForBattle {
    lock
    faceplayer
    waitmovement(0)
    applymovement(VAR_LAST_TALKED, Common_Movement_ExclamationMark)
    waitmovement(0)
    callnative(GetSymbolEncounterSpecies)
    setseenmon(VAR_0x8004)
    playmoncry(VAR_0x8004, CRY_MODE_ENCOUNTER)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(format("The {STR_VAR_1} wants you to get on with it and challenge its Trainer."), MSGBOX_DEFAULT)
    waitmoncry
    applymovement(VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection)
    release
}

script Common_EventScript_RanFromStaticPokemon {
    setobjectmovementtype(VAR_LAST_TALKED, MOVEMENT_TYPE_LOOK_AROUND)
    clearflag(FLAG_FORCE_SHINY)
    callnative(ClearSymbolEncounterAI)
    msgbox(format("You backed away and gave it space."), MSGBOX_DEFAULT)
    release
}

script Common_EventScript_RemoveStaticPokemon {
    fadescreenswapbuffers(FADE_TO_BLACK)
    removeobject(VAR_LAST_TALKED)
    fadescreenswapbuffers(FADE_FROM_BLACK)
    clearflag(FLAG_FORCE_SHINY)
    callnative(ClearSymbolEncounterAI)
    release
}

script Common_EventScript_LegendaryFlewAway {
    fadescreenswapbuffers(FADE_TO_BLACK)
    removeobject(VAR_LAST_TALKED)
    fadescreenswapbuffers(FADE_FROM_BLACK)
    callnative(ClearSymbolEncounterAI)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(gText_LegendaryFlewAway, MSGBOX_DEFAULT)
    release
}

script Common_PokemonScript_Pettable {
    lock
    faceplayer
    specialvar(VAR_0x8004, GetSpeciesFromOverworldPokemon)
    setseenmon(VAR_0x8004)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    call(Common_EventScript_Pokemon_Petting)
    release
}

script Common_EventScript_Pokemon_Petting {
    speakername(0)
    msgbox(format("The {STR_VAR_1} seems friendly.\nPet it?"), MSGBOX_YESNO)
    if (var(VAR_RESULT)) {
        playmoncry(VAR_0x8004, CRY_MODE_NORMAL)
        applymovement(VAR_LAST_TALKED, Common_Movement_Heart)
        waitse
        waitmovement(0)
        msgbox("It's very happy!", MSGBOX_DEFAULT)
        addvar(VAR_TIMES_PET_PEACEFUL_POKEMON, 1)
        if (flag(FLAG_PET_MANY_DOGS)) {
            random(5)
            switch (var(VAR_RESULT)) {
            case 0:
                msgbox(Common_EventScript_PetPokemon_GiftText, MSGBOX_DEFAULT)
                giveitem(ITEM_RARE_BONE)
            case 1:
                msgbox(Common_EventScript_PetPokemon_GiftText, MSGBOX_DEFAULT)
                giveitem(ITEM_PRETTY_FEATHER)
            }
        } else {
            if (var(VAR_TIMES_PET_PEACEFUL_POKEMON) == 50) {
                setflag(FLAG_PET_MANY_DOGS)
            }
            random(10)
            switch (var(VAR_RESULT)) {
            case 0:
                msgbox(Common_EventScript_PetPokemon_GiftText, MSGBOX_DEFAULT)
                giveitem(ITEM_RARE_BONE)
            case 1:
                msgbox(Common_EventScript_PetPokemon_GiftText, MSGBOX_DEFAULT)
                giveitem(ITEM_PRETTY_FEATHER)
            }
        }
    } else {
        playmoncry(VAR_0x8004, CRY_MODE_WEAK)
        applymovement(VAR_LAST_TALKED, Common_Movement_X)
        waitse
        waitmovement(0)
        msgbox("It seems disappointed in you…", MSGBOX_DEFAULT)
    }
}

text Common_EventScript_PetPokemon_GiftText {
    format("It gave you something it was carrying!")
}

script Common_PokemonScript_InvisibleWild {
    lock
    faceplayer
    applymovement(VAR_LAST_TALKED, Movement_PokemonAppears)
    waitse
    callnative(StartStationaryEncounter)
    playmoncry(VAR_0x8004, CRY_MODE_ENCOUNTER)
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(format("You startled the {STR_VAR_1}!"), MSGBOX_DEFAULT)
    waitmoncry
    waitmessage
    setflag(FLAG_SYS_CTRL_OBJ_DELETE)
    dowildbattle
    clearflag(FLAG_SYS_CTRL_OBJ_DELETE)
    specialvar(VAR_RESULT, GetBattleOutcome)
    goto_if_eq(VAR_RESULT, B_OUTCOME_RAN, Common_EventScript_RanFromStaticPokemon)
    goto(Common_EventScript_RemoveStaticPokemon)
}

movement Movement_PokemonAppears {
    set_visible
    face_player
    emote_exclamation_mark
    set_invisible   delay_4
    set_visible     delay_4
    set_invisible   delay_4
    set_visible     delay_8
    set_invisible   delay_8
    set_visible
}

script Common_EventScript_DefeatedStaticPokemon {
    msgbox(format("The miffed Pokémon healed itself with a Berry and counted your winnings."), MSGBOX_DEFAULT)
    switch (var(VAR_POKEDEX_COMPLETION)) {
    case 0:
        giveitem(ITEM_EXP_CANDY_XS)
    case 1:
        giveitem(ITEM_EXP_CANDY_XS, 5)
    case 2:
        giveitem(ITEM_EXP_CANDY_XS, 5)
        giveitem(ITEM_EXP_CANDY_S, 1)
    case 3:
        giveitem(ITEM_EXP_CANDY_XS, 5)
        giveitem(ITEM_EXP_CANDY_S, 3)
    case 4:
        giveitem(ITEM_EXP_CANDY_XS, 10)
        giveitem(ITEM_EXP_CANDY_S, 3)
        giveitem(ITEM_EXP_CANDY_M, 1)
    case 5:
        giveitem(ITEM_EXP_CANDY_S, 5)
        giveitem(ITEM_EXP_CANDY_M, 3)
        giveitem(ITEM_EXP_CANDY_L, 1)
    default:
        giveitem(ITEM_EXP_CANDY_M, 5)
        giveitem(ITEM_EXP_CANDY_L, 3)
        giveitem(ITEM_EXP_CANDY_XL, 1)
    }
    bufferspeciesname(STR_VAR_1, VAR_0x8004)
    msgbox(format("The {STR_VAR_1} left…"), MSGBOX_DEFAULT)
    goto(Common_EventScript_RemoveStaticPokemon)
}
